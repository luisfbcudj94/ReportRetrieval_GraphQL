@using FrontEnd_GraphQL.Application.Models
<table class="table table-hover">
    <thead class="table-primary">
        <tr>
            <th>Commission Id</th>
            <th>Order Id</th>
            <th>Advertiser Name</th>
            <th>Sale Amount Usd</th>
            <th>Order Discount Usd</th>
            <th>Posting Date</th>
        </tr>
    </thead>
    <tbody>
        @if (Data != null)
        {
            @foreach (var item in Data)
            {
                <tr>
                    <td>@item.CommissionId</td>
                    <td>@item.OrderId</td>
                    <td>@item.AdvertiserName</td>
                    <td>@item.SaleAmountUsd</td>
                    <td>@item.OrderDiscountUsd</td>
                    <td>@item.PostingDate.ToShortDateString()</td>
                </tr>
            }
        }
        else
        {
            <p>No users available.</p>
        }
    </tbody>
</table>

<div class="container-pagination">

    <div class="pagination">

        <button class="btn btn-outline-primary" disabled="@(!hasPrevious)" @onclick="() => ChangePage(pageNumber - 1)">
            <span aria-hidden="true">&laquo;</span>
        </button>

        @for (int i = 1; i <= Math.Min(pageCount, 4); i++)
        {
            int currentPage = i;

            <button class="btn @(currentPage == pageNumber ? "btn-outline-primary active" : "btn-outline-primary")" @onclick="() => ChangePage(currentPage)">
                @currentPage
            </button>

        }

        @if (pageCount > 5)
        {
            <button class="btn btn-outline-primary">
                ...
            </button>
            <button class="btn @(pageCount == pageNumber ? "btn-outline-primary active" : "btn-outline-primary")" @onclick="() => ChangePage(pageCount)">
                @pageCount
            </button>
        }

        <button class="btn btn-outline-primary" disabled="@(!hasNext)" @onclick="() => ChangePage(pageNumber + 1)">
            <span aria-hidden="true">&raquo;</span>
        </button>

    </div>

    <div class="dropup-center dropup">
        <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            items per page
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" @onclick="() => SetPageSize(1)">1</a></li>
            <li><a class="dropdown-item" @onclick="() => SetPageSize(5)">5</a></li>
            <li><a class="dropdown-item" @onclick="() => SetPageSize(10)">10</a></li>
            <li><a class="dropdown-item" @onclick="() => SetPageSize(20)">20</a></li>
        </ul>
    </div>


</div>

@code {
    [Parameter] public List<Commissions> Data { get; set; }

    private int pageNumber = 1;
    private int pageSize = 1;
    private int pageCount = 0;
    private bool hasPrevious = false;
    private bool hasNext = false;
    private int selectedPage = 1;
    

    private async Task SetPageSize(int size)
    {
        pageNumber = 1;
        pageSize = size;
    }

    private async Task ChangePage(int newPage)
    {
        if (newPage >= 1 && newPage <= pageCount)
        {
            pageNumber = newPage;
            selectedPage = newPage;
        }
    }
}